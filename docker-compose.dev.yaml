version: '3.8'

services:
  fastapi:
    build: 
      context: .
      dockerfile: Dockerfile
    env_file: .env.dev
    container_name: fastapi_dev
    volumes:
      - ./app:/app
      - ./certs:/certs
      - ./initdb.sql:/initdb.sql:ro
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    depends_on:
      sqlite_loader:
        condition: service_completed_successfully
      cert_generator:
        condition: service_completed_successfully

  sqliteweb:
    image: coleifer/sqlite-web
    container_name: sqlite_web_admin
    volumes:
      - ./app:/data
    ports:
      - "8081:8080"
    entrypoint: ["sqlite_web", "--host", "0.0.0.0", "/data/db.sqlite3"]
    depends_on:
      sqlite_loader:
        condition: service_completed_successfully

  cert_generator:
    image: alpine/openssl:3.5.0
    container_name: cert_generator
    volumes:
      - ./certs:/certs
      - ./cert_gen.sh:/cert_gen.sh:ro
    entrypoint: ["sh", "/cert_gen.sh"]
    restart: "no"

  sqlite_loader:
    image: alpine/openssl:3.5.0
    container_name: sqlite_loader
    volumes:
      - ./app:/app
      - ./initdb.sql:/initdb.sql:ro
      - ./load_sqlite3.sh:/load_sqlite3.sh
    entrypoint: /bin/sh
    command: >
      -c "apk update &&
          apk add --no-cache sqlite bash &&
          chmod +x /load_sqlite3.sh &&
          /load_sqlite3.sh"
    restart: "no"