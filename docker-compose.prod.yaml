version: '3.8'

services:
  event_gallery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: fastapi_prod
    env_file: .env.prod
    ports:
      - "8000:8000"
    volumes:
      - ./app/media:/app/media
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: "uvicorn run:app --host $$EVENT_GALLERY_HOST --port $$EVENT_GALLERY_PORT"

  db:
    image: postgres:15
    container_name: postgres_prod
    restart: unless-stopped
    env_file: .env.prod 
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb.prod.sql:/docker-entrypoint-initdb.d/initdb.prod.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5      
      
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_prod
    restart: unless-stopped
    ports:
      - "5050:80"
    env_file: .env.prod
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db

  noip:
    image: noipcom/noip-duc:latest
    env_file:
      - .env.prod

  caddy:
    image: caddy:latest
    container_name: caddy_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - event_gallery

volumes:
  postgres_data:
  pgadmin_data:
  caddy_data:
  caddy_config: